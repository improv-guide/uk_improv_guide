version: '3.7'

services:

  dev:
    image: "salimfadhley/uk-improv-guide:${IMPROV_GUIDE_VERSION}"
    build:
      context: .
      target: uk-improv-guide
    volumes:
      - media:/src/uk_improv_guide/static/media
      - ./src:/src
    working_dir: "/src/uk_improv_guide"
    entrypoint: ["manage.py", "runserver"]
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_SSLMODE: ${POSTGRES_SSLMODE}
      SLACK_WEB_HOOK: ${SLACK_WEB_HOOK}
      PRODUCTION_SECRET: ${PRODUCTION_SECRET}
      SITE_PORT: ${SITE_PORT}
    networks:
      - internal

#  db:
#    image: postgres:10.9
#    volumes:
#      - "postgres_data:/var/lib/postgresql/data"
#    environment:
#      POSTGRES_USER: improv
#      POSTGRES_DB: improv
#      POSTGRES_PORT: 5432
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    networks:
#      - interna
#    deploy:
#      replicas: 1
#      placement:
#        constraints:
#          - node.role == worker


#  syncthing:
#    image: linuxserver/syncthing
#    environment:
#      - TZ=Europe/London
#    volumes:
#      - syncthing_config:/config
#      - static:/data1
#    ports:
#      - 8384:8384
#      - 22000:22000
#      - 21027:21027/udp
#    deploy:
#      replicas: 2
#      placement:
#        constraints:
#          - node.role == worker


volumes:
  syncthing_config:
  media:
  postgres_data:

networks:
  internal: