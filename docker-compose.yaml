version: '3.7'

#  ./static:/src/uk-improv-guide/static

services:

  nginx:
    image: "salimfadhley/uk-improv-guide-nginx:${IMPROV_GUIDE_VERSION}"
    build:
      context: .
      target: uk-improv-guide-nginx
    volumes:
      - static:/usr/share/nginx/html/static:ro
    ports:
      - 80:80
      - 443:443
    networks:
      - internal
    depends_on:
      - prod
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == manager

  prod:
    image: "salimfadhley/uk-improv-guide:${IMPROV_GUIDE_VERSION}"
    build:
      context: .
      target: uk-improv-guide
    volumes:
      - static:/src/uk_improv_guide/static
    working_dir: "/src/uk_improv_guide"
    ports:
      - "80:80"
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      SLACK_WEB_HOOK: ${SLACK_WEB_HOOK}
      PRODUCTION_SECRET: ${PRODUCTION_SECRET}
      SITE_PORT: ${SITE_PORT}
    networks:
      - internal

  db:
    image: postgres:10.9
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - internal


  syncthing:
    image: linuxserver/syncthing
    environment:
      - TZ=Europe/London
    volumes:
      - syncthing_config:/config
      - static:/data1
    ports:
      - 8384:8384
      - 22000:22000
      - 21027:21027/udp
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker


volumes:
  syncthing_config:
  static:
  postgres_data:

networks:
  internal: