version: '3.7'

services:
  nginx:
    image: "salimfadhley/uk-improv-guide-nginx:${IMPROV_GUIDE_VERSION}"
    build:
      context: .
      target: uk-improv-guide-nginx
    volumes:
      - media:/usr/share/nginx/html/media:ro
      - certbot_www:/usr/share/nginx/html/certbot
      - certbot_conf:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443
    networks:
      - internal
    depends_on:
      - site
    restart: always
    deploy:
      placement:
        constraints:
          - node.role == manager

  site:
    restart: always
    image: "salimfadhley/uk-improv-guide:${IMPROV_GUIDE_VERSION}"
    build:
      context: .
      target: uk-improv-guide
    volumes:
      - media:/media
      - backup:/backup
      - ssh:/root/.ssh
      - certbot_www:/certbot/www
      - certbot_conf:/certbot/conf
    working_dir: "/src/uk_improv_guide"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      SLACK_WEB_HOOK: ${SLACK_WEB_HOOK}
      PRODUCTION_SECRET: ${PRODUCTION_SECRET}
      SITE_PORT: ${SITE_PORT}
      BACKUP_DIR: /backup
    networks:
      - internal

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

volumes:
  certbot_conf:
  certbot_www:
  media:
  ssh:
  backup:

networks:
  internal: